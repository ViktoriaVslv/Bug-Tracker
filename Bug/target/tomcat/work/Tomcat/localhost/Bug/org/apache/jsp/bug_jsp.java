/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-01-09 08:49:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import javax.servlet.*;
import java.util.*;
import java.sql.*;
import model.BDUsers;
import model.BDBugs;
import javax.servlet.http.*;

public final class bug_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html lang=\"en\">\n");
      out.write("\t<head>\n");
      out.write("\t\t<meta charset=\"UTF-8\">\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"demo.css\" />\n");
      out.write("\t\t<title>Tracker Bug</title>\n");
      out.write("\t</head>\n");
      out.write("\t<body>\n");
      out.write("\t\t<div class=\"login-page\">\n");
      out.write("\t\t\t<div class=\"form\">\n");
      out.write("\t\t\t\t<form class=\"bag-form\" action=\"MakeBug\" method=\"post\">\n");
      out.write("\t\t\t\t\t");
RequestDispatcher dispatcher = this.getServletContext().getRequestDispatcher("/Table");
					String change = (String) session.getAttribute("change");
					BDBugs bugs = new BDBugs();
					BDUsers users = new BDUsers();
					ArrayList usersList = new ArrayList();
					ArrayList parents = new ArrayList();
					if (session.getAttribute("change") == null) {
						try {
							usersList = users.getAllUsers();
							parents = bugs.getAllBugs();
							String u=" ";
      out.write("\n");
      out.write("\t\t\t\t\t\t\tName*:<input type=\"text\" name=\"name\" placeholder=\"Name\" value /> \n");
      out.write("\t\t\t\t\t\t\tDescription:<input type=\"text\" name=\"description\" placeholder=\"Description\" value />\n");
      out.write("\t\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t\tParent: <select name=\"parent\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<option>");
      out.print(u);
      out.write("</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t");
for (int i = 0; i < parents.size(); i++) {
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option>");
      out.print(parents.get(i));
      out.write("</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t");
}
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t\tTo*: <select name=\"towho\">\n");
      out.write("\t\t\t\t\t\t\t\t\t");
for (int i = 0; i < usersList.size(); i++) {
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t<option>");
      out.print(usersList.get(i));
      out.write("</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t");
}
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t\t");

						users.close();
						} 
					catch (Exception e) {
						e.printStackTrace();
					}
      out.write("\n");
      out.write("\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\tForm*: <select name=\"list\">\n");
      out.write("\t\t\t\t\t\t\t<option>Bug</option>\n");
      out.write("\t\t\t\t\t\t\t<option>Feature</option>\n");
      out.write("\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\tStatus*: <select name=\"list1\">\n");
      out.write("\t\t\t\t\t\t\t<option>Open</option>\n");
      out.write("\t\t\t\t\t\t\t<option>Close</option>\n");
      out.write("\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t<p class=\"message\">*Required fields</p>\n");
      out.write("\t\t\t\t\t<input type=\"submit\" name=\"m\" value=\"Save new bug\" />\n");
      out.write("\n");
      out.write("\t\t\t\t\t");
}
					else {
						try {
						
							ArrayList all =bugs.getAll(change);
							usersList = users.getAllUsers();
							parents = bugs.getAllBugs();
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<h3>Change Bug</h3>\n");
      out.write("\t\t\t\t\t\t\tName: <input type=\"text\" name=\"name\" value=\"");
      out.print((String)all.get(1));
      out.write("\">\n");
      out.write("\t\t\t\t\t\t\tDescription: <input type=\"text\" name=\"description\" value=\"");
      out.print((String)all.get(5));
      out.write("\">\n");
      out.write("\t\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t\tForm: <select name=\"list\">\n");
      out.write("\t\t\t\t\t\t\t\t\t");
if (((String)all.get(6)).equals("Bug")) {
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option>Bug</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option>Feature</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t");
} 
									else {
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option>Feature</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option>Bug</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t");
}
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t\tStatus: <select name=\"list1\">\n");
      out.write("\t\t\t\t\t\t\t\t\t");
if (((String)all.get(0)).equals("Open")) {
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option>Open</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option>Close</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t");
}
									else {
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option>Close</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option>Open</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t");
}
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t\tTo: <select name=\"towho\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<option>");
      out.print((String)all.get(3));
      out.write("</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t");
usersList.remove(all.get(3));
									for (int i = 0; i < usersList.size(); i++) {
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option>");
      out.print((String)usersList.get(i));
      out.write("</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t");
}
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t\tParent: <select name=\"parent\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<option>");
      out.print((String)all.get(7));
      out.write("</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t");
parents.remove(all.get(1));
									parents.remove(all.get(7));
									//ListBug l = new ListBug(parents, (String)all.get(1), true);
									parents=bugs.newL(parents, (String)all.get(1));
									for (int i = 0; i < parents.size(); i++) {
										if (!parents.get(i).equals(all.get(7)))
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option>");
      out.print((String)parents.get(i));
      out.write("</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t");
}
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t\t\t<input type=\"submit\" name=\"m\" value=\"Save\" />\n");
      out.write("\t\t\t\t\t\t\t");
bugs.close();	
						}
						catch (Exception e) {
							e.getStackTrace();
						}
						bugs.close();
					}
					dispatcher = this.getServletContext().getRequestDispatcher("/MakeBug");
        			String user = (String) session.getAttribute("alert");
        			if (user != null){
        				if(user.equals("noname")){
      out.write("\n");
      out.write("        \t\t\t\t\t<script> alert('NO NAME')</script>\n");
      out.write("        \t\t\t\t");
} 
        				if(user.equals("ex")){
      out.write("\n");
      out.write("        \t\t\t\t\t<script> alert('Bug/Feature exists')</script>\n");
      out.write("        \t\t\t\t");
}
        				if(user.equals("close")){
      out.write("\n");
      out.write("    \t\t\t\t\t\t<script> alert(\"You can't close the bug. Nested bugs are not closed.\")</script>\n");
      out.write("    \t\t\t\t\t");
}
        			}
        			session.removeAttribute("alert");
        			
      out.write("\n");
      out.write("\t\t\t\t</form>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</body>\n");
      out.write("\t<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\" type=\"text/javascript\"></script>\n");
      out.write("\t<script src=\"boot.js\" type=\"text/javacsript\"></script>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
